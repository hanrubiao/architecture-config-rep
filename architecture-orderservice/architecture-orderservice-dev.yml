#端口号
server:
  port: 7003
#注册中心
eureka:
  client:
    service-url:
      defaultZone: http://eureka1:8001/eureka,http://eureka2:8002/eureka
#应用名称
spring:
  application:
    name: architecture-orderservice
    #数据库配置
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://172.20.10.8:3306/test?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: root
      password: 123456
      #初始化时建立物理连接的个数
      initial-size: 5
      #最大连接池数量
      max-active: 30
      #最小连接池数量
      min-idle: 5
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      #连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 30000
      #用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: SELECT '1'
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis,
      #执行validationQuery检测连接是否有效。
      test-while-idle: true
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      #是否缓存preparedStatement,mysql5.5+建议开启
      pool-prepared-statements: true
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-pool-prepared-statement-per-connection-size: 20
      #配置扩展插件
      filters: stat,wall
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      #合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
  cloud:
    loadbalancer:
      retry:
        enabled: true
    stream:
      kafka:
        binder:
          brokers: localhost:9092
  #zipkin配置
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0 # 将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
  zipkin:
    base-url: http://172.20.10.8:9411/ # 指定了 Zipkin 服务器的地址

management:
  endpoints:
    web:
      exposure:
        include: bus-refresh


#rest请求的超时时间
custome:
  requestfactory:
    connect-timeout: 5000
    connection-request-timeout: 5000
    read-timeout: 5000

#Kafka服务端的默认端口，当brokers属性中没有配置端口信息时，就会使用这个默认端口，默认9092
#management:
#  endpoints:
#    web:
#      exposure:
#        include: bus-refresh

##断路器超时时间
hystrix:
  command:
     default:
        execution:
           isolation:
              thread:
                timeoutInMilliseconds: 10000

#配置打开断路器
feign:
  hystrix:
    enabled: true
  compression:
    request:
      min-request-size: 2048
      mime-types: text/html, application/xml, application/json

